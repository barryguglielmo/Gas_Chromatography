#This code was written to aid in exporting text file reports to Excel Files
#it was written using python 3.6 and the only dependancy is Pandas



import pandas as pd

class Report():
    """Make a Report Class to Take Report Generated by ChemStation
        and Return Pandas DataFrame Object"""
    falist = ['Sa','Sb','S1','Sc','S2','T1','M1','S3','M2','S4','T2','M3','S5','U3','S6',
                'T3','T4','C2','T5','M6','M7','U12','S7','T6','T7','T8','P1','S8','P2','T10','M10',
                'P3','P4a','P5','S10','P6','P8','S11','P9','P10','S12','M12','P12','P13','P14']

    def __init__(self, filename):
        #file read
        mf = open(filename, "r")       
        #object to call for each line
        line = mf.readlines()
        #clean data
        clean = []
        for i in range(0, len(line)):
            clean.append(line[i].replace("\x00","").strip("\n"))

        #get the start points of data and other factors
        for i in range(0, 100):
            if "Injection Date" in clean[i]:
                self.date = clean[i][18:50].strip(' ')
            if "Peak" in clean[i]:
                start = i+6
        #Sample name
        self.sample_name = clean[2][13:]
        #Operator
        self.operator = clean[10][18:35].strip(' ')
        #Instrument
        self.instrument = clean[12][18:35].strip(' ')
        #Total pA*S
        self.total_pas = clean[start+90][27:38].strip(' ')
        #Total %
        self.total_pct = clean[start+90][38:48].strip(' ')
      

        #Data (Pandas Df)
        data = []
        for i in range(start,start+90):
            sm = []
            if i%2 == 0:
                #peak #
                sm.append(clean[i][0:5].strip(' '))
                #ret time
                sm.append(clean[i][5:13].strip(' '))
                #width
                sm.append(clean[i][20:28].strip(' '))
                #area pas
                sm.append(clean[i][28:38].strip(' '))
                #area%
                sm.append(clean[i][38:48].strip(' '))
                #name
                sm.append(clean[i][48:54].strip(' '))
                #nest small array into data array
                data.append(sm)
        #convert to pandas dataframe
        data = pd.DataFrame(data)
        #add col names
        my_columns = ["Peak #", "Ret. Time (min)","Width (min)", "Area (pA*s)", "Area%", "Name"]
        data.columns = my_columns
        #data attribute
        self.data = data
        #fatty acid list
        self.falist = falist

        #get only the pct and totals needed
        my_array = data.loc[:,'Area%'].values
        a2 = []
        for i in my_array:
            a2.append(float(i))
        a2.append(0)
        a2.append(float(self.total_pas))
        a2.append(float(self.total_pct))
        df = pd.DataFrame(a2)
        self.template_data = df

        #close the opened file
        mf.close()

def mult_to_excel(outfile):
    """Convert Multiple Reports to Single Excel Sheet"""
    temp = pd.DataFrame()
    for i in os.listdir(os.getcwd()):
        if i[-3:] == 'TXT':
            df = Report(i)
            temp[df.sample_name] = df.template_data[0]
    temp.to_csv(outfile, index = False)
    return temp



###sample use###
falist = ['Sa','Sb','S1','Sc','S2','T1','M1','S3','M2','S4','T2','M3','S5','U3','S6',
            'T3','T4','C2','T5','M6','M7','U12','S7','T6','T7','T8','P1','S8','P2','T10','M10',
            'P3','P4a','P5','S10','P6','P8','S11','P9','P10','S12','M12','P12','P13','P14']
import os
path ="C:/Users/bag019/Documents/Reports/20181210_Back_Reports" 
os.chdir(path)
x = mult_to_excel("n53_n61.csv")
import scipy.stats
y = x.transpose()
z = scipy.stats.zscore(y.iloc[:,:-3])
import matplotlib.pyplot as plt
z = pd.DataFrame(z)
z.columns = falist
z.plot.box(rot = 45, grid = True)
plt.show()
